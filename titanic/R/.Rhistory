X_train$Fare<-X_train$Fare %>% as.numeric
y_train<-trainSet$Survived %>% as.factor
fit_rf <- randomForest( x = X_train, y = y_train, ntree = 500)
sum(is.na(X_train$Age))
View(trainSet)
X_train$Age[is.na(X_train$Age)]<-0
y_train<-trainSet$Survived %>% as.factor
fit_rf <- randomForest( x = X_train, y = y_train, ntree = 500)
fit_rf$importance
plot(fit_rf)
fit_rf <- randomForest( x = X_train, y = y_train, ntree = 1000)
plot(fit_rf)
plot(fit_rf$importance)
plot(fit_rf$importanceSD)
plot(fit_rf$importance)
plot(fit_rf)
data(mtcars)
plot(randomForest(mpg ~ ., mtcars, keep.forest=FALSE, ntree=100), log="y")
plot(randomForest(mpg ~ ., mtcars, ntree=100), log="y")
View(fit_rf)
plot(fit_rf)
?plot.randomForest
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-c("Survived"))
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
X_train$Age[is.na(X_train$Age)]<-0
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-c("Survived"))
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
X_train$Age[is.na(X_train$Age)]<-0
X_test<-testSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
y_train<-trainSet$Survived %>% as.factor
fit_rf <- randomForest( x = X_train, y = y_train, ntree = 1000)
View(X_test)
View(X_train)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
View(trainSet)
View(testSet)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-c("Survived"))
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
X_train$Age[is.na(X_train$Age)]<-0
y_train<-trainSet$Survived %>% as.factor
view(Xtrian)
view(Xtrain
)
View(X_train)
View(y_train)
sum(is.na(X_train$Age))
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-c("Survived"))
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
sum(is.na(X_train$Age))
sum(is.na(X_train$Age))/sum(nrow(X_train))
hist(X_train$Age)
hist(X_train$Age)
X_train$Age[is.na(X_train$Age)]<--1
hist(X_train$Age)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-c("Survived"))
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
X_train$Age[is.na(X_train$Age)]<--99
hist(X_train$Age)
mean(X_train$Age)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-c("Survived"))
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
mean(X_train$Age)
mean(X_train$Age[!is.na(X_train$Age)])
hist(X_train$Age)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
trainSet$Survived
y_train<-trainSet$Survived %>% as.factor
y_train
c <- trainSet %>% select(Sex)
View(c)
c <- trainSet %>% select(-Sex)
View(c)
X_train<-trainSet %>% select(-c("Survived"))
c("Pclass","Sex","Age","SibSp","Fare","Embarked")
X_train<-trainSet %>% select(-Survived)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Pclass
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Pclass
X_train$Embarked
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Embarked
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
sum(is.na(X_train$Age))/sum(nrow(X_train))
sum(is.na(X_train$Embarked))/sum(nrow(X_train))
hist(X_train$Age)
is.na(X_train$Embarked)
is.na(X_train$Age)
hist(X_train$Age)
hist(X_train$Age)
y_train<-trainSet$Survived %>% as.factor
mean(X_train$Age[!is.na(X_train$Age)])
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
View(trainSet)
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
View(X_train)
sum(is.na(X_train$Age))/sum(nrow(X_train))
hist(X_train$Age)
y_train<-trainSet$Survived %>% as.factor
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
View(X_train)
fit_rf <- randomForest( x = X_train, y = y_train, ntree = 1000)
fit_rf <- randomForest( x = X_train, y = y_train, ntree = 1000)
plot(fit_rf)
plot(fit_rf)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
trainGrouped <- X_train %>% group_by(Sex, Age)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-Survived)
trainGrouped <- X_train %>% group_by(Sex, Age)
summarise(trainGrouped, delay = mean(trainGrouped, na.rm = TRUE))
X_train<-trainSet %>% select(-Survived)
trainGrouped <- X_train %>% group_by(Sex)
summarise(trainGrouped, delay = mean(trainGrouped, na.rm = TRUE))
trainGrouped
summarise(trainGrouped, delay = mean(trainGrouped, na.rm = TRUE))
summarise(trainGrouped, delay = mean(Age, na.rm = TRUE))
library(tidyverse)
mpg
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
library(nycflights13)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month, day)
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
View(by_day)
library(tidyverse)
library(nycflights13)
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
View(by_day)
trainGrouped <- X_train %>% group_by(Sex)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-Survived)
trainGrouped <- X_train %>% group_by(Sex)
summarise(trainGrouped, delay = mean(Age, na.rm = TRUE))
X_train$Age
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
trainGrouped <- X_train %>% group_by(Sex)
summarise(trainGrouped, delay = mean(Age, na.rm = TRUE))
trainGrouped <- X_train %>% group_by(Sex,Pclass)
summarise(trainGrouped, delay = mean(Age, na.rm = TRUE))
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE))
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , n = count())
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , n = count(Age, na.rm = FALSE))
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , count = n())
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , count = sum(is.na))
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , count = sum(is.na()))
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , count = sum(is.na(y)))
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , count = sum(is.na(Age)))
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , numberOfNA = sum(is.na(Age)))
hist(trainGrouped$Age)
trainGrouped <- X_train %>% group_by(Sex,Pclass,Embarked)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Sex,Pclass)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Embarked)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Sex,Pclass)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE),numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Embarked)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE), numberOfNA = sum(is.na(Age)))
sum(is.na(trainSet$Embarked))
sum((trainSet$Embarked)=="")
which((trainSet$Embarked)=="")
boxplot(Age ~ Pclass , data = X_train, xlab = "Pclass",   ylab = "Age", main = "Age")
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
View(trainSet)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
View(X_train)
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
X_train1<- X_train[800,]
X_train2<-X_train[801,]
View(X_train1)
X_train1<- X_train[1:800,]
X_train2<-X_train[801:891,]
fit_rf <- randomForest( x = X_train1, y = y_train, ntree = 1000)
View(X_train)
View(X_train1)
y_train<-trainSet$Survived %>% as.factor
y_train1<-y_train[1:800,]
y_train2<-y_train[801:891,]
y_train<-trainSet$Survived %>% as.factor
y_train
y_train1<-y_train[1:800,]
y_train1<-y_train[1:800]
y_train2<-y_train[801:891]
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
X_train1<- X_train[1:800,]
X_train2<-X_train[801:891,]
fit_rf <- randomForest( x = X_train1, y = , ntree = 1000)
forecast(X_train2,fit_rf)
View(X_train2)
plot(fit_rf)
fit_rf <- randomForest( x = X_train1, y = , ntree = 1000)
View(fit_rf)
print(fit_rf)
?randomForest
fit_rf <- randomForest( x = X_train1, y =y_train1 , ntree = 1000)
forecast(X_train2,fit_rf)
plot(fit_rf)
forecast(X_train2,fit_rf)
predict(X_train2,fit_rf)
predict(fit_rf,X_train2)
View(y_train2)
predict(fit_rf,X_train2)
pred<-predict(fit_rf,X_train2)
which(pred == y_train)/length(y_train)
pred == y_train
y_train
as.character(pred)== as.character(y_train)
pred== y_train2
length(which(pred== y_train2))/length(y_train)
pred
which(pred== y_train2)
length(which(pred== y_train2))/length(y_train2)
0.2*800
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(c("Survived","Pclass","Sex","Age","SibSp","Fare","Embarked"))
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
#X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Survived","Pclass","Sex","Age","SibSp","Fare","Embarked"))
View(X_train)
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
trainGrouped <- X_train %>% group_by(Sex,Pclass)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE),numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Embarked)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE), numberOfNA = sum(is.na(Age)))
boxplot(Age ~ Pclass , data = X_train, xlab = "Pclass",   ylab = "Age", main = "Age")
sum(is.na(X_train$Age))/sum(nrow(X_train))
sum(is.na(X_train$Embarked))/sum(nrow(X_train))
smp_size <- floor(0.8 * nrow(X_train))
train_ind <- sample(seq_len(nrow(X_train)), size = smp_size)
train_ind
### TRAIN AND TEST SPLIT ----
set.seed(123)
smp_size <- floor(0.8 * nrow(X_train))
train_ind <- sample(seq_len(nrow(X_train)), size = smp_size)
learning <- X_train[train_ind, ]
validation <- X_train[-train_ind, ]
View(testSet)
View(trainGrouped)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
#X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Survived","Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Fare<-X_train$Fare %>% as.numeric
trainGrouped <- X_train %>% group_by(Sex,Pclass)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE),numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Embarked)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE), numberOfNA = sum(is.na(Age)))
boxplot(Age ~ Pclass , data = X_train, xlab = "Pclass",   ylab = "Age", main = "Age")
sum(is.na(X_train$Age))/sum(nrow(X_train))
sum(is.na(X_train$Embarked))/sum(nrow(X_train))
hist(trainGrouped$Age)
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
### TRAIN AND TEST SPLIT ----
set.seed(123)
smp_size <- floor(0.8 * nrow(X_train))
train_ind <- sample(seq_len(nrow(X_train)), size = smp_size)
learning <- X_train[train_ind, ]
validation <- X_train[-train_ind, ]
fit_rf <- randomForest(Survived~. ,data = learning,ntree = 1000)
X_train$Survived <- X_train %>% as.factor()
X_train$Survived <- X_train %>% as.factor
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
#X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Survived","Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Survived <- X_train %>% as.factor
X_train$Fare<-X_train$Fare %>% as.numeric
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
#X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Survived","Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Survived <- X_train$Survived %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Fare<-X_train$Fare %>% as.numeric
trainGrouped <- X_train %>% group_by(Sex,Pclass)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE),numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Embarked)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE), numberOfNA = sum(is.na(Age)))
boxplot(Age ~ Pclass , data = X_train, xlab = "Pclass",   ylab = "Age", main = "Age")
sum(is.na(X_train$Age))/sum(nrow(X_train))
sum(is.na(X_train$Embarked))/sum(nrow(X_train))
hist(trainGrouped$Age)
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
### TRAIN AND TEST SPLIT ----
set.seed(123)
smp_size <- floor(0.8 * nrow(X_train))
train_ind <- sample(seq_len(nrow(X_train)), size = smp_size)
learning <- X_train[train_ind, ]
validation <- X_train[-train_ind, ]
fit_rf <- randomForest(Survived~. ,data = learning,ntree = 1000)
pred<-predict(fit_rf,validation %>% select(-"Survived"))
length(which(pred== validation %>% select("Survived")))/length(y_train2)
validation %>% select("Survived")
pred
y_validation <- validation %>% select("Survived")
length(which(pred== y_validation))/length(y_validation)
y_validation <- validation %>% select("Survived")
pred== y_validation
y_validation
pred
pred == as.factor(y_validation)
as.factor(y_validation)
y_validation
pred
length(y_validation)
y_validation
View(y_validation)
y_validation <- validation %>% select("Survived") %>% as.numeric
y_validation <- validation %>% select("Survived") %>% unlist
y_validation
View(y_validation)
validation %>% select("Survived")
y_validation <- validation %>% select("Survived") %>% unlist
length(which(pred == y_validation))/length(y_validation)
length(y_validation)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
#X_train<-trainSet %>% select(-Survived)
X_train<-trainSet %>% select(c("Survived","Pclass","Sex","Age","SibSp","Fare","Embarked"))
X_train$Sex<- X_train$Sex %>% as.factor
X_train$Pclass<- X_train$Pclass %>% as.factor
X_train$Embarked<- X_train$Embarked %>% as.factor
X_train$Age<-X_train$Age %>% as.numeric
X_train$Survived <- X_train$Survived %>% as.factor
X_train$Fare<-X_train$Fare %>% as.numeric
trainGrouped <- X_train %>% group_by(Sex,Pclass)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE),numberOfNA = sum(is.na(Age)))
trainGrouped <- X_train %>% group_by(Embarked)
summarise(trainGrouped, meanAge = mean(Age, na.rm = TRUE) , meadianAge = median(Age, na.rm = TRUE), numberOfNA = sum(is.na(Age)))
boxplot(Age ~ Pclass , data = X_train, xlab = "Pclass",   ylab = "Age", main = "Age")
sum(is.na(X_train$Age))/sum(nrow(X_train))
sum(is.na(X_train$Embarked))/sum(nrow(X_train))
hist(trainGrouped$Age)
X_train$Age[is.na(X_train$Age)]<- mean(X_train$Age[!is.na(X_train$Age)])
### TRAIN AND TEST SPLIT ----
set.seed(123)
smp_size <- floor(0.8 * nrow(X_train))
train_ind <- sample(seq_len(nrow(X_train)), size = smp_size)
learning <- X_train[train_ind, ]
validation <- X_train[-train_ind, ]
### VALIDATION OF MY MODEL ----
fit_rf <- randomForest(Survived~. ,data = learning,ntree = 1000)
pred<-predict(fit_rf,validation %>% select(-"Survived"))
y_validation <- validation %>% select("Survived") %>% unlist
length(which(pred == y_validation))/length(y_validation)
install.packages(c("dplyr", "forecast", "ggplot2", "randomForest"))
source('/cloud/project/titanic/R/main.R')
length(which(pred == y_validation))/length(y_validation)
library(dplyr)
library(randomForest)
library(forecast)
library(ggplot2)
trainSet<-read.csv2("./../input/train.csv",sep =",",stringsAsFactors = FALSE)
testSet<-read.csv2("./../input/test.csv",sep=",")
X_train<-trainSet %>% select(c("Survived","Pclass","Sex","Age","SibSp","Fare","Embarked"))
